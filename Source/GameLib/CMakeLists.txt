set(target GameLib)

add_library(${target}
    STATIC

    Debug/DebugOverlay.cpp
    Debug/DebugOverlay.h

    Hailstorm/HailstormBullet.h
    Hailstorm/HailstormManager.cpp
    Hailstorm/HailstormManager.h
    Hailstorm/HailstormPhysicsWorld.cpp
    Hailstorm/HailstormPhysicsWorld.h

    Npc/NpcAttackTask.cpp
    Npc/NpcAttackTask.h
    Npc/NpcSteering.cpp
    Npc/NpcSteering.h
    Npc/NpcController.cpp
    Npc/NpcController.h
    Npc/NpcDebugTask.cpp
    Npc/NpcDebugTask.h
    Npc/NpcControllerSystem.h
    Npc/NpcDebugRendererSystem.cpp
    Npc/NpcDebugRendererSystem.h
    Npc/NpcFlightControl.cpp
    Npc/NpcFlightControl.h
    Npc/NpcTask.cpp
    Npc/NpcTask.h

    Player/PlayerFlightControl.cpp
    Player/PlayerFlightControl.h
    Player/PlayerSystem.cpp
    Player/PlayerSystem.h

    Resource/ComponentPrototype.h
    Resource/CoriolisPrototype.cpp
    Resource/CoriolisPrototype.h
    Resource/EntityPrototype.cpp
    Resource/EntityPrototype.h
    Resource/EntityPrototypeManager.cpp
    Resource/EntityPrototypeManager.h
    Resource/EquipmentPrototype.cpp
    Resource/EquipmentPrototype.h
    Resource/FlightControlConfigPrototype.cpp
    Resource/FlightControlConfigPrototype.h
    Resource/NpcControllerPrototype.cpp
    Resource/NpcControllerPrototype.h
    Resource/PlayerFlightControlPrototype.cpp
    Resource/PlayerFlightControlPrototype.h
    Resource/RigidBodyPrototype.cpp
    Resource/RigidBodyPrototype.h
    Resource/VoxelObjectPrototype.cpp
    Resource/VoxelObjectPrototype.h

    Vfx/Emitter.cpp
    Vfx/Emitter.h
    Vfx/EmitterColorStrategy.cpp
    Vfx/EmitterColorStrategy.h
    Vfx/EmitterInstance.cpp
    Vfx/EmitterInstance.h
    Vfx/EmitterIntensityStrategy.cpp
    Vfx/EmitterIntensityStrategy.h
    Vfx/EmitterLifetimeStrategy.cpp
    Vfx/EmitterLifetimeStrategy.h
    Vfx/EmitterPlacementStrategy.cpp
    Vfx/EmitterPlacementStrategy.h
    Vfx/EmitterRotationStrategy.cpp
    Vfx/EmitterRotationStrategy.h
    Vfx/EmitterSizeStrategy.cpp
    Vfx/EmitterSizeStrategy.h
    Vfx/EmitterVelocityStrategy.cpp
    Vfx/EmitterVelocityStrategy.h
    Vfx/VfxDefines.h
    Vfx/VfxEffect.cpp
    Vfx/VfxEffect.h
    Vfx/VfxManager.cpp
    Vfx/VfxManager.h
    Vfx/VfxParticle.h
    Vfx/VfxParticle.inl
    Vfx/VfxRenderBatch.cpp
    Vfx/VfxRenderBatch.h
    Vfx/VfxRenderer.cpp
    Vfx/VfxRenderer.h
    Vfx/VfxSystem.cpp
    Vfx/VfxSystem.h

    Voxel/VoxelCluster.cpp
    Voxel/VoxelCluster.h
    Voxel/VoxelCluster.inl
    Voxel/VoxelClusterContact.cpp
    Voxel/VoxelClusterContact.h
    Voxel/VoxelClusterMarchingCubes.cpp
    Voxel/VoxelClusterMarchingCubes.h
    Voxel/VoxelClusterMarchingCubesTriangulation.cpp
    Voxel/VoxelClusterMarchingCubesTriangulation.h
    Voxel/VoxelClusterPrimitiveTest.cpp
    Voxel/VoxelClusterPrimitiveTest.h
    Voxel/VoxelClusterSplitDetector.cpp
    Voxel/VoxelClusterSplitDetector.h
    Voxel/VoxelClusterSplitSystem.cpp
    Voxel/VoxelClusterSplitSystem.h
    Voxel/VoxelHull.cpp
    Voxel/VoxelHull.h
    Voxel/VoxelImpactSystem.cpp
    Voxel/VoxelImpactSystem.h
    Voxel/VoxelObject.cpp
    Voxel/VoxelObject.h
    Voxel/VoxelObjectPrimitives.cpp
    Voxel/VoxelObjectPrimitives.h
    Voxel/VoxelObjectVoxelData.cpp
    Voxel/VoxelObjectVoxelData.h
    Voxel/VoxelRenderChunk.cpp
    Voxel/VoxelRenderChunk.h
    Voxel/VoxelRenderChunkTree.cpp
    Voxel/VoxelRenderChunkTree.h
    Voxel/VoxelRigidBodyPayload.cpp
    Voxel/VoxelRigidBodyPayload.h
    Voxel/VoxelShape.cpp
    Voxel/VoxelShape.h
    Voxel/VoxelWorld.cpp
    Voxel/VoxelWorld.h
    Voxel/VoxReader.cpp
    Voxel/VoxReader.h

    AimHelper.cpp
    AimHelper.h
    CoriolisComponent.h
    CoriolisSystem.cpp
    CoriolisSystem.h
    CollisionShapeTypes.h
    Engine.cpp
    Engine.h
    EngineSlot.cpp
    EngineSlot.h
    Equipment.cpp
    Equipment.h
    EquipmentSystem.cpp
    EquipmentSystem.h
    FlightControlConfig.cpp
    FlightControlConfig.h
    Hardpoint.cpp
    Hardpoint.h
    ItemSlot.cpp
    ItemSlot.h
    GameLib.cpp
    GameLib.h
    VerseApplication.cpp
    VerseApplication.h
    Weapon.cpp
    Weapon.h
    )

target_include_directories(${target}
    PUBLIC

    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/Debug
    ${CMAKE_CURRENT_SOURCE_DIR}/Hailstorm
    ${CMAKE_CURRENT_SOURCE_DIR}/Systems
    ${CMAKE_CURRENT_SOURCE_DIR}/Npc
    ${CMAKE_CURRENT_SOURCE_DIR}/Player
    ${CMAKE_CURRENT_SOURCE_DIR}/Resource
    ${CMAKE_CURRENT_SOURCE_DIR}/Vfx
    ${CMAKE_CURRENT_SOURCE_DIR}/Voxel

    ${DELIBERATION_INCLUDE_DIRS}
    )

target_link_libraries(${target}
    ${DELIBERATION_LIBRARIES}
    )